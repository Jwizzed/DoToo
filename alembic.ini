# A configuration file for Alembic.
# See: https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file

[alembic]
# path to migration scripts
script_location = alembic

# Template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# timezone locale to use when rendering timestamps within migration files
# set to 'utc' to use UTC, 'local' to use the local timezone, or leave
# blank to use the timezone setting of the Python interpreter locale
# timezone =

# Logging configuration - note that this is Python's standard logging
# setup, as used by e.g. basicConfig(). Other sections related to
# logging include [loggers], [handlers], [formatters].
;logging_config_file =

# set to true to log statements to stdout
# sqlalchemy.echo = false

# Relative path to the '.env' file from the location of this ini file.
# This line allows env.py to potentially load variables if configured to do so.
# Note: Actual loading is typically handled within env.py itself.
environment_file = .env

# Revision file naming template - default is '%%(rev)s_%%(slug)s.py'
# revision_file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s.py

# Set to 'true' to try to deploy structural constructs as CREATE TYPE .. AS ENUM / ALTER TYPE
# (applicable only to PostgreSQL). Available in Alembic 1.10+
# postgresql_enum_alter = false

# Set to 'true' to try to deploy CHECK constraints by name (applicable only to PostgreSQL).
# Available in Alembic 1.10+
# postgresql_check_alter = false

# Database connection URL. This is read by env.py and usually overridden there
# by getting the value from environment variables or settings.
# Placeholder - ensure your env.py correctly sets the URL from .env or environment.
sqlalchemy.url = postgresql+asyncpg://user:password@localhost:5432/todo_db


[post_write_hooks]
# Post write hook definitions start with 'hooks = '.
# Format is <hook_name> = <hook_config_string> (one per line).
# Run 'alembic list_hooks' to see available hooks and their configuration.
# hooks =

# Hook used by 'alembic-autogenerate-enums' package (if installed)
# hooks = autogenerate_enums
# autogenerate_enums.schema = public
# autogenerate_enums.tables = my_table, other_table
# autogenerate_enums.skip_if_offline = true


#
# Logging configuration follows Python's logging module configuration.
# You can customize levels, handlers, and formatters here.
#

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S